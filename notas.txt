------GLOSARIO---------

Polyfill:
código que provee el funcionamiento de una nueva característica de JS (ES6), en versiones viejas como ES5

Null:
sin valor en lo absoluto

undefined:
una variable declarada que aún no se le asigna valor

symbol:
es un valor único que no es igual a ningún otro valor, ni siquiera a otro symbol igual

-JS cuando lee un archivo, priemro hace un barrido de todo lo que hay en ese archivo,
obtiene las inicializaciones de las variables y funciones que se existen

Assets:
nombre utilizado para indicar que lo que tiene dentro son recursos estáticos en la app,
es decir, no van a ser removidos y estarán siempre en la carpeta

CONST:
nunca se va a eliminar o manipular directamente

VAR:
todos los var están dentro de un objeto global window
permite poder reemplazar propiedades y objetos propios del objeto global window

LET:
eventualmente se va a poder borrar o manipular directamente

DOM:
conjunto de objetos anidados para crear un documento HTML.
También aplica al XML.
permite tener acceso dinánimo a través de programación a sus elementos
y poder manipularlos.
toda etiqueta en html puede ser manipulada con el DOM.
Se hace utilizando unas sentencias especiales que solo van a funcionar
si están ejecutando código de JavaScript en el navegador, 
¿por qué?
porque cuando se está corriendo JS en el servidor, 
obviamente ahí no existe el DOM porque no hay elementos HTML, o sea, no hay nada que hacer ahí.

CALLBACK:
Función que se está mandando como argumento de otra función. 
Puede ser una función traducional o una de flecha

-MIN:
sufijo estándar
archivos compactados, comprimidos, minimizado (minify) 
y listo para producción
    existen páginas, extensiones VC, programas....
    javascript-minifier.com
En el caso de querer cambiar algo, no se toca este archivo. 
Sino, el archivo con el mismo nombre pero sin sufijo, 
    Ejemplo:
    juego-min.js ---> archivo con sufijo estándar para producción
    juego.js ---> archivo para desarrollo
Si están ubicados en el mismo proyecto, el archivo-min es el que leerá el navegador, su contraparte de desarrollo no.
